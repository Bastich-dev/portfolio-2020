{"version":3,"sources":["dragon.jpg","chevalier.jpg","Header.jsx","View.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Component","View","state","player","life","pm","atk","def","spells","counter","boosts_atk","boosts_def","ennemy","spellsView","player_turn","message","active_player","result","calcBoost","props","i","length","playerDecrementeBoost","prop1","prop2","splice","setState","prevState","ennemyDecrementeBoost","resultActionPlayer","action","Math","floor","newArrayAtk","push","newArrayDef","resultActionEnnemy","newArrayEnnemy","actionPlayer","e","currentTarget","value","setTimeout","ennemyAction","WinAction","spell","random","resetAction","LoseAction","href","changecolor","console","log","this","src","chevalier","alt","title","disabled","type","onClick","dragon","MyVerticallyCenteredModal","show","Modal","size","aria-labelledby","centered","Title","id","Body","Footer","App","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b8e9fc76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dragon.7e57520d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chevalier.2b3e0352.jpg\";","\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h1 className=\"p-3\">Bastien Chantrel RPG - React.js</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport dragon from './dragon.jpg'\r\nimport chevalier from './chevalier.jpg'\r\n\r\n\r\nclass View extends Component {\r\n    state = {\r\n        player: {\r\n            life: 150,\r\n            pm: 30,\r\n            atk: 16,\r\n            def: 23,\r\n            spells: ['Attaque', 'Soin', 'Attaque magique', 'Contre', 'Boost Attaque', 'Boost Défense'],\r\n            counter: false,\r\n            boosts_atk: [],\r\n            boosts_def: []\r\n        },\r\n        ennemy: {\r\n            life: 200,\r\n            pm: 50,\r\n            atk: 15,\r\n            def: 20,\r\n            spells: ['Attaque violente', 'Rugissement effrayant', 'Boost Surpuissant', 'Boule de feu'],\r\n            spellsView: ['?', '?', '?', '?'],\r\n            boosts_atk: [],\r\n            boosts_def: []\r\n        },\r\n        player_turn: 0,\r\n        message:\r\n            <div>\r\n                <p>A vous de jouer</p>\r\n                <p>Séléctionnez une action ! </p>\r\n            </div>,\r\n        active_player: false,\r\n        result: false\r\n    }\r\n\r\n\r\n\r\n    calcBoost = (props) => {\r\n        let result = 0;\r\n        for (let i = 0; i < props.length; i++) {\r\n            result += 4\r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    playerDecrementeBoost = (prop1, prop2) => {\r\n        for (let i = 0; i < prop1.length; i++) {\r\n            prop1[i] -= 1\r\n        }\r\n        for (let i = 0; i < prop1.length; i++) {\r\n            if (prop1[i] == 0) prop1.splice(i, 1)\r\n        }\r\n        this.setState(prevState => {\r\n            let player = { ...prevState.player };\r\n            player.boosts_atk = prop1;\r\n            return { player };\r\n        })\r\n        for (let i = 0; i < prop2.length; i++) {\r\n            prop2[i] -= 1\r\n        }\r\n        for (let i = 0; i < prop2.length; i++) {\r\n            if (prop2[i] == 0) prop2.splice(i, 1)\r\n        }\r\n        this.setState(prevState => {\r\n            let player = { ...prevState.player };\r\n            player.boosts_def = prop2;\r\n            return { player };\r\n        })\r\n    }\r\n\r\n    ennemyDecrementeBoost = (prop1, prop2) => {\r\n        for (let i = 0; i < prop1.length; i++) {\r\n            prop1[i] -= 1\r\n        }\r\n        for (let i = 0; i < prop1.length; i++) {\r\n            if (prop1[i] == 0) prop1.splice(i, 1)\r\n        }\r\n        this.setState(prevState => {\r\n            let ennemy = { ...prevState.ennemy };\r\n            ennemy.boosts_atk = prop1;\r\n            return { ennemy };\r\n        })\r\n        for (let i = 0; i < prop2.length; i++) {\r\n            prop2[i] -= 1\r\n        }\r\n        for (let i = 0; i < prop2.length; i++) {\r\n            if (prop2[i] == 0) prop2.splice(i, 1)\r\n        }\r\n        this.setState(prevState => {\r\n            let ennemy = { ...prevState.ennemy };\r\n            ennemy.boosts_def = prop2;\r\n            return { ennemy };\r\n        })\r\n    }\r\n\r\n\r\n    resultActionPlayer = (action) => {\r\n\r\n\r\n\r\n        this.playerDecrementeBoost(this.state.player.boosts_atk, this.state.player.boosts_def)\r\n\r\n        let message = ''\r\n\r\n        switch (action) {\r\n\r\n            case 'Attaque':\r\n                this.setState(prevState => {\r\n                    let ennemy = { ...prevState.ennemy };\r\n                    ennemy.life -= (this.state.player.atk - this.state.ennemy.def / 2);\r\n                    return { ennemy };\r\n                })\r\n                message = \"Le dragon a perdu \" + (this.state.player.atk - this.state.ennemy.def / 2) + \" PV\"\r\n                break;\r\n\r\n            case 'Soin':\r\n                if (this.state.player.pm >= 5) {\r\n                    this.setState(prevState => {\r\n                        let player = { ...prevState.player };\r\n                        player.life += (Math.floor(this.state.player.atk / 4 * 3));\r\n                        return { player };\r\n                    })\r\n                    this.setState(prevState => {\r\n                        let player = { ...prevState.player };\r\n                        player.pm -= 5;\r\n                        return { player };\r\n                    })\r\n\r\n                    if (this.state.player.life > 150) {\r\n                        this.setState(prevState => {\r\n                            let player = { ...prevState.player };\r\n                            player.life = 150;\r\n                            return { player };\r\n                        })\r\n                    }\r\n\r\n\r\n                    message = \"Vous avez récupéré \" + (Math.floor(this.state.player.atk / 4 * 3)) + \" PV  /  Tu as perdu 5 PM\"\r\n                }\r\n                else {\r\n                    message = \"Vous n'avez plus de PM, vôtre action échoue !\"\r\n                }\r\n                break;\r\n\r\n            case 'Attaque magique':\r\n                if (this.state.player.pm >= 8) {\r\n                    this.setState(prevState => {\r\n                        let ennemy = { ...prevState.ennemy };\r\n                        ennemy.life -= (this.state.player.atk * 2 - this.state.ennemy.def / 2);\r\n                        return { ennemy };\r\n                    })\r\n                    this.setState(prevState => {\r\n                        let player = { ...prevState.player };\r\n                        player.pm -= 8;\r\n                        return { player };\r\n                    })\r\n                    message = \"Le dragon a perdu \" + (this.state.player.atk * 2 - this.state.ennemy.def / 2) + \" PV  /  Tu as perdu 8 PM\"\r\n                }\r\n                else {\r\n                    message = \"Vous n'avez plus de PM, vôtre action échoue !\"\r\n                }\r\n                break;\r\n\r\n            case 'Contre':\r\n                this.setState(prevState => {\r\n                    let player = { ...prevState.player };\r\n                    player.counter = true;\r\n                    return { player };\r\n                })\r\n                message = \"Vous allez bloquer la prochaine attaque !\"\r\n                break;\r\n\r\n            case 'Boost Attaque':\r\n                let newArrayAtk = [...this.state.player.boosts_atk]\r\n                newArrayAtk.push(4)\r\n                this.setState(prevState => {\r\n                    let player = { ...prevState.player };\r\n                    player.boosts_atk = newArrayAtk;\r\n                    return { player };\r\n                })\r\n                message = \"Vous avez boosté vôtre attaque pour 3 tours\"\r\n                break;\r\n\r\n            case 'Boost Défense':\r\n                let newArrayDef = [...this.state.player.boosts_def]\r\n                newArrayDef.push(3)\r\n                this.setState(prevState => {\r\n                    let player = { ...prevState.player };\r\n                    player.boosts_def = newArrayDef;\r\n                    return { player };\r\n                })\r\n                message = \"Vous avez boosté vôtre défense pour 3 tours\"\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState(prevState => {\r\n            let player = { ...prevState.player };\r\n            player.atk = 16 + this.calcBoost(player.boosts_atk);\r\n            return { player };\r\n        })\r\n        this.setState(prevState => {\r\n            let player = { ...prevState.player };\r\n            player.def = 23 + this.calcBoost(player.boosts_def);\r\n            return { player };\r\n        })\r\n        return (message)\r\n    }\r\n\r\n    resultActionEnnemy = (action) => {\r\n\r\n\r\n        this.ennemyDecrementeBoost(this.state.ennemy.boosts_atk, this.state.ennemy.boosts_def)\r\n        let message = ''\r\n\r\n        switch (action) {\r\n            case 'Attaque violente':\r\n                if (this.state.player.counter == true) {\r\n                    this.setState(prevState => {\r\n                        let player = { ...prevState.player };\r\n                        player.life -= Math.floor((this.state.ennemy.atk * 2 - this.state.player.def / 4 * 3) / 2);\r\n                        return { player };\r\n                    })\r\n                    this.setState(prevState => {\r\n                        let ennemy = { ...prevState.ennemy };\r\n                        ennemy.life -= Math.floor((this.state.ennemy.atk * 2 - this.state.ennemy.def / 4 * 3) / 4);\r\n                        return { ennemy };\r\n                    })\r\n                    message = \"Tu as réussi à contrer ! Tu as perdu \" + Math.floor((this.state.ennemy.atk * 2 - this.state.player.def / 4 * 3) / 2) + \" PV et à infliger \" + Math.floor((this.state.ennemy.atk * 2 - this.state.ennemy.def / 4 * 3) / 4) + \" PV\"\r\n                }\r\n                else {\r\n                    this.setState(prevState => {\r\n                        let player = { ...prevState.player };\r\n                        player.life -= Math.floor(this.state.ennemy.atk * 2 - this.state.player.def / 4 * 3);\r\n                        return { player };\r\n                    })\r\n                    message = \"Tu as perdu \" + Math.floor(this.state.ennemy.atk * 2 - this.state.player.def / 4 * 3) + \" PV\"\r\n                }\r\n\r\n\r\n                break;\r\n\r\n            case 'Rugissement effrayant':\r\n                this.setState(prevState => {\r\n                    let ennemy = { ...prevState.ennemy };\r\n                    ennemy.pm += 5\r\n                    return { ennemy };\r\n                })\r\n\r\n                if (this.state.ennemy.pm > 50) {\r\n                    this.setState(prevState => {\r\n                        let ennemy = { ...prevState.ennemy };\r\n                        ennemy.pm = 50\r\n                        return { ennemy };\r\n                    })\r\n                }\r\n                message = \"Le dragon pousse un rugissement effroyable, il regagne 5 PM \"\r\n                break;\r\n\r\n            case 'Boost Surpuissant':\r\n\r\n                let newArrayEnnemy = [...this.state.ennemy.boosts_atk]\r\n                newArrayEnnemy.push(2)\r\n                this.setState(prevState => {\r\n                    let ennemy = { ...prevState.ennemy };\r\n                    ennemy.boosts_atk = newArrayEnnemy;\r\n                    return { ennemy };\r\n                })\r\n                message = \"Le dragon boost son attaque très fortement pendant 2 tours !\"\r\n                break;\r\n\r\n            case 'Boule de feu':\r\n\r\n                if (this.state.ennemy.pm >= 35) {\r\n\r\n                    if (this.state.player.counter == true) {\r\n                        this.setState(prevState => {\r\n                            let player = { ...prevState.player };\r\n                            player.life -= Math.floor((this.state.ennemy.atk * 2 - this.state.player.def / 3) / 2);\r\n                            return { player };\r\n                        })\r\n                        this.setState(prevState => {\r\n                            let ennemy = { ...prevState.ennemy };\r\n                            ennemy.pm -= 35;\r\n                            return { ennemy };\r\n                        })\r\n                        this.setState(prevState => {\r\n                            let ennemy = { ...prevState.ennemy };\r\n                            ennemy.life -= Math.floor((this.state.ennemy.atk * 2 - this.state.player.def / 3) / 4);\r\n                            return { ennemy };\r\n                        })\r\n                        message = \"Tu as  réussi à contrer, tu as perdu \" + Math.floor((this.state.ennemy.atk * 2 - this.state.player.def / 3) / 2) + \" PV, et à infliger \" + Math.floor((this.state.ennemy.atk * 2 - this.state.player.def / 3) / 4) + \", et le dragon n'a plus beaucoup de PM !\"\r\n                    }\r\n                    else {\r\n                        this.setState(prevState => {\r\n                            let player = { ...prevState.player };\r\n                            player.life -= Math.floor(this.state.ennemy.atk * 2 - this.state.player.def / 3);\r\n                            return { player };\r\n                        })\r\n                        this.setState(prevState => {\r\n                            let ennemy = { ...prevState.ennemy };\r\n                            ennemy.pm -= 35;\r\n                            return { ennemy };\r\n                        })\r\n                        message = \"Tu as perdu \" + Math.floor(this.state.ennemy.atk * 2 - this.state.player.def / 3) + \" PV mais le dragon n'a plus beaucoup de PM !\"\r\n                    }\r\n                }\r\n                else {\r\n                    message = \"Le dragon n'a pas assez de PM, il échoue son action !\"\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState(prevState => {\r\n            let ennemy = { ...prevState.ennemy };\r\n            ennemy.atk = 20 + this.calcBoost(ennemy.boosts_atk) + 10;\r\n            return { ennemy };\r\n        })\r\n        return (message)\r\n    }\r\n\r\n\r\n    actionPlayer = (e) => {\r\n        this.setState({ active_player: true })\r\n        const action = e.currentTarget.value\r\n        setTimeout(() => {\r\n            this.setState({\r\n                message:\r\n                    <div>\r\n                        <p> Vous avez utilisé l'action : '{action}'</p>\r\n                        <p> {this.resultActionPlayer(action)} </p>\r\n                    </div>\r\n            })\r\n            this.ennemyAction()\r\n        }, 500)\r\n    }\r\n\r\n    ennemyAction = () => {\r\n        setTimeout(() => {\r\n\r\n            if (this.state.ennemy.life <= 0) this.WinAction()\r\n            else {\r\n\r\n                const spell = Math.floor(Math.random() * 4);\r\n                this.setState(prevState => {\r\n                    let ennemy = { ...prevState.ennemy };\r\n                    ennemy.spellsView[spell] = this.state.ennemy.spells[spell];\r\n                    return { ennemy };\r\n                })\r\n                this.setState({\r\n                    message:\r\n                        <div>\r\n                            <p>  Le dragon à  utilisé l'action : '{this.state.ennemy.spells[spell]}'</p>\r\n                            <p> {this.resultActionEnnemy(this.state.ennemy.spells[spell])} </p>\r\n                        </div>\r\n                })\r\n                this.resetAction()\r\n            }\r\n        }, 3000)\r\n    }\r\n\r\n\r\n    resetAction = () => {\r\n        setTimeout(() => {\r\n            this.setState(prevState => {\r\n                let player = { ...prevState.player };\r\n                player.counter = false;\r\n                return { player };\r\n            })\r\n            if (this.state.player.life <= 0) this.LoseAction()\r\n            else {\r\n                this.setState({\r\n                    message: <div>\r\n                        <p>  A vous de jouer </p>\r\n                        <p> Séléctionnez une action !  </p>\r\n                    </div>\r\n                })\r\n                this.setState({ active_player: false })\r\n            }\r\n        }, 3000)\r\n    }\r\n\r\n\r\n    WinAction = () => {\r\n        this.setState({ message: <p>Bien joué, vous avez gagné</p> })\r\n        this.setState({ result: 'Win' })\r\n    }\r\n\r\n    LoseAction = () => {\r\n        this.setState({ message: <p>Vous avez perdu, appuyer sur ce boutton pour réessayer  <a href=\"index.html\" className=\"btn btn-primary\">Reset</a> </p> })\r\n        this.setState({ result: 'Lose' })\r\n    }\r\n\r\n    changecolor = () => {\r\n        console.log('lol')\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<div className='col-12'>\r\n\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"pres m-3 mb-5\">\r\n                    <h4> {this.state.message}</h4>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row justify-content-around\">\r\n\r\n                <div className=\"partie col-lg-5 col-sm-11 p-2 mt-3\">\r\n                    <div className='picture_player'>\r\n                        <img className=\"picture_img\" src={chevalier} alt=\"\" />\r\n                    </div>\r\n                    <h2>Chevalier </h2>\r\n                    <h3>Pv : {this.state.player.life} /150  <span className=\"ml-4\"> Stat Attaque : {this.state.player.atk} </span> </h3>\r\n                    <h3>Pm : {this.state.player.pm} /30  <span className=\"ml-4\"> Stat Defense : {this.state.player.def} </span>  </h3>\r\n                    <hr />\r\n                    <div action=\"\" className=\"col-12 row justify-content-around\" >\r\n                        <input title=\"Attaque le dragon\" disabled={this.state.active_player} className=\"m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.player.spells[0]} onClick={this.actionPlayer} />\r\n                        <input title=\"Vous vous soignez en fonction de vôtre puissance d'attaque, consomme 5 PM\" disabled={this.state.active_player} className=\"m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.player.spells[1]} onClick={this.actionPlayer} />\r\n                        <input title=\"Effectue une puissante attaque mais consomme 8 PM\" disabled={this.state.active_player} className=\"m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.player.spells[2]} onClick={this.actionPlayer} />\r\n                        <input title=\"Vous perdez moins de PV sur l'attaque de votree dragon et lui infligez quelques dégâts\" disabled={this.state.active_player} className=\"m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.player.spells[3]} onClick={this.actionPlayer} />\r\n                        <input title=\"Boost vôtre attque durant 3 tours\" disabled={this.state.active_player} className=\"m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.player.spells[4]} onClick={this.actionPlayer} />\r\n                        <input title=\"Boost vôtre défense durant 3 tours\" disabled={this.state.active_player} className=\"m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.player.spells[5]} onClick={this.actionPlayer} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"partie col-lg-5 col-sm-11 p-2 mt-3\">\r\n                    <div className='picture_ennemy'>\r\n                        <img className=\"picture_img\" src={dragon} alt=\"\" />\r\n                    </div>\r\n                    <h2>Dragon </h2>\r\n                    <h3>  Pv : {this.state.ennemy.life} /200</h3>\r\n                    <h3>Pm : ? /?</h3>\r\n                    <hr />\r\n                    <div action=\"\" className=\"col-12 row justify-content-around\" >\r\n                        <input className=\"ennemy_input m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.ennemy.spellsView[0]} disabled />\r\n                        <input className=\"ennemy_input m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.ennemy.spellsView[1]} disabled />\r\n                        <input className=\"ennemy_input m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.ennemy.spellsView[2]} disabled />\r\n                        <input className=\"ennemy_input m-2 col-lg-5 col-sm-11\" type=\"button\" value={this.state.ennemy.spellsView[3]} disabled />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <MyVerticallyCenteredModal show={this.state.result ? true : false} result={this.state.result} />\r\n        </div>);\r\n    }\r\n}\r\nexport default View;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.result == 'Win' ? 'Bravo, vous avez triomphé !' : 'Dommage, vous avez perdu !'}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>By Bastien Chantrel, Développeur Web Front-end </h4>\r\n                <p>\r\n                    Mon premier projet React.js . Ce projet avait pour but de m'initier au principes du JSX et de débuter avec React.js, je l'utilise désormais pour m'entraîner à réduire et factoriser mon code .\r\n                    <br />\r\n                    Vous pouvez trouver le repo Github : <a href=\"https://github.com/BastosC/Bastoss-RPG---React.js\">Lien github</a>\r\n                    <br />\r\n                    Merci d'avoir joué !\r\n          </p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <a href=\"index.html\" className=\"btn btn-primary\">Réessayer</a>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n\r\n","\nimport React, { Component } from 'react';\nimport Header from \"./Header\"\nimport View from \"./View\"\nimport './App.css';\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <View />\n        <footer className=\"mt-4\">\n          <div className=\"m-4\">\n            <b className=\"footeritem\"> © Copyright 2020</b>\n            <a href='index.html' className=\"footeritem\">Bastoss RPG</a>\n            <a href='http://bastien-chantrel.fr/' target='_blank' className=\"footeritem\">Bastien Chantrel</a>\n            <a href='https://github.com/BastosC/Bastoss-RPG---React.js' target='_blank' className=\"footeritem\">Github</a>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}